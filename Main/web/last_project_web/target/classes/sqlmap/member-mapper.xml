<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

<!-- 회원정보 신규저장:회원가입 -->
<insert id="join">
<!-- email,pw,name,nickname,phone,join_date,amdin,social_code,filename, filepath, my_level -->
<!-- 소셜로그인한 정보로 가입시는 비번, salt 가 없다 -->
insert into userinfo(email, pw, name
					, phone)
values ( #{email, jdbcType=VARCHAR}, #{pw, jdbcType=VARCHAR}
		, #{name}, #{phone, jdbcType=VARCHAR} )
</insert>

<!-- 회원정보 변경 -->
<update id="update">
update member set name=#{name}, gender=#{gender}, email=#{email}
				, birth=#{birth, jdbcType=VARCHAR}
				, phone=#{phone, jdbcType=VARCHAR}
				, address=#{address, jdbcType=VARCHAR}
				, post=#{post, jdbcType=VARCHAR}
				, profile=#{profile, jdbcType=VARCHAR}
				, social=#{social, jdbcType=VARCHAR}
where userid=#{userid}				   
</update>

<!-- 아이디 존재여부 확인 -->
<select id='email_check' resultType='integer'>
select count(*) from userinfo where email=#{email}
</select>

<!-- 아이디에 해당하는 이메일이 맞는지 확인 -->
	<select id="userid_email" resultType="integer">
		select count(*) from userinfo
		where email=#{email}
	</select>

<!-- 비밀번호변경 -->
<update id="reset_password">
update member set salt=#{salt}, userpw=#{userpw}
where userid=#{userid}
</update>



<!-- 회원의 salt조회 -->
<select id='salt' resultType='string'>
select salt from member where userid=#{userid}
</select>

<!-- 000000000000000000000000000000000000000 -->
<!-- 로그인:아이디/비번 일치하는 회원정보 조회 -->
<select id='login' resultType='member.MemberVO'>
select * from userinfo where email=#{email} and pw=#{pw}
</select>


</mapper>